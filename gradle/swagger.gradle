/*
 * Plugin that provides API-first development using OpenAPI-generator to
 * generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition file
 */
buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:${openapi_plugin_version}"
    }
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/swagger/api.yml".toString()
    outputDir = "$buildDir/openapi".toString()
    apiPackage = "com.icthh.xm.tmf.ms.customer.api"
    modelPackage = "com.icthh.xm.tmf.ms.customer.model"
    apiFilesConstrainedTo = [""]
    modelFilesConstrainedTo = [""]
    supportingFilesConstrainedTo = ["ApiUtil.java"]
    configOptions = [delegatePattern: "true", title: "customer"]
    validateSpec = true
    importMappings = [Problem:"org.zalando.problem.Problem"]
}

task openApiGenerateV4(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/swagger/api_v4.yml".toString()
    outputDir = "$buildDir/openapi".toString()
    apiPackage = "com.icthh.xm.tmf.ms.customer.api.v4"
    modelPackage = "com.icthh.xm.tmf.ms.customer.model.v4"
    modelNameSuffix = "V4"
    apiFilesConstrainedTo = [""]
    modelFilesConstrainedTo = [""]
    supportingFilesConstrainedTo = ["ApiUtil.java"]
    configOptions = [delegatePattern: "true", title: "customerV4"]
    validateSpec = true
    importMappings = [Problem: "org.zalando.problem.Problem"]
}


tasks.openApiGenerate {
    dependsOn tasks.openApiGenerateV4
}

sourceSets {
    main {
        java {
            srcDir file("${project.buildDir.path}/openapi/src/main/java")
        }
    }
}

compileJava.dependsOn("openApiGenerate")
